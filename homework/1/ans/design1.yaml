apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        # Path to access.log & error.log
        access_log /var/log/nginx/access.log  main;
        error_log /var/log/nginx/error.log  warn;

        sendfile        on;
        keepalive_timeout  65;
        gzip  on;

        upstream backend {
            # must match the target service name
            server svc-wordpress.user-10.svc.cluster.local:80;
        }

        server {
            listen       80;
            location / {
                # $http_host is the host name that users seen on the browser URL
                # and it equals to `HTTP_HOST` request header.
                proxy_set_header Host $http_host;

                # You have to change this according to your setup.
                proxy_pass http://svc-wordpress.user-10.svc.cluster.local;

                # Modify `Location` of 301 or 302 HTTP response, so
                # that the browser will follow the correct location.
                proxy_redirect ~^http://[^/]*/(.*) http://$http_host/$1;
            }
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-conf
data:
  fluent.conf: |
    <source>
      type tail
      path /logs/**/access.log
      tag nginx.access
      format nginx
    </source>

    <source>
      @type tail
      format /^(?<time>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?<log_level>\w+)\] (?<pid>\d+).(?<tid>\d+): (?<message>.*)$/
      tag nginx.error
      path /logs/**/error.log
    </source>

    <match nginx.access>
      @type stdout
    </match>

    <match nginx.error>
      @type stdout
    </match>
---
---
apiVersion: v1
kind: Pod
metadata:
  name: mysqlpod
  labels:
    version: "1"
    app: mysql
spec:
  containers:
    - name: mysql
      image: mysql:8.0.29
      ports: 
       - containerPort: 3306
      env:
      - name: MYSQL_ROOT_PASSWORD 
        valueFrom: 
          secretKeyRef:
            name: mysqlsecret
            key: MYSQL_ROOT_PASSWORD
      - name: MYSQL_DATABASE
        valueFrom: 
          secretKeyRef:
            name: mysqlsecret
            key: MYSQL_DATABASE
      - name: MYSQL_USER
        valueFrom: 
          secretKeyRef:
            name: mysqlsecret
            key: MYSQL_USER
      - name:  MYSQL_PASSWORD
        valueFrom: 
          secretKeyRef:
            name: mysqlsecret
            key:  MYSQL_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: svc-mysql
spec:
  selector:
    app: mysql
    version: "1"
  ports:
    - port: 3306
      targetPort: 3306
  type: ClusterIP

--- 
apiVersion: v1
kind: Secret
metadata:
  name: mysqlsecret
  namespace: user-10
type: Opaque
stringData:
  MYSQL_ROOT_PASSWORD: "123456"
  MYSQL_DATABASE: mmysql
  MYSQL_USER: steven
  MYSQL_PASSWORD: "123456"
  WORDPRESS_DB_HOST: svc-mysql.user-10.svc.cluster.local

---
apiVersion: v1
kind: Pod
metadata:
  name: mywordpresspod
  labels:
    version: "1"
    app: wordpress
spec:
  containers:
    - name: wordpress
      image: wordpress:6.0.0-apache
      ports: 
       - containerPort: 80
      env:
      - name: MYSQL_ROOT_PASSWORD 
        valueFrom: 
          secretKeyRef:
            name: mysqlsecret
            key: MYSQL_ROOT_PASSWORD
      - name: WORDPRESS_DB_NAME
        valueFrom: 
          secretKeyRef:
            name: mysqlsecret
            key: MYSQL_DATABASE
      - name: WORDPRESS_DB_USER
        valueFrom: 
          secretKeyRef:
            name: mysqlsecret
            key: MYSQL_USER
      - name:  WORDPRESS_DB_PASSWORD
        valueFrom: 
          secretKeyRef:
            name: mysqlsecret
            key:  MYSQL_PASSWORD
      - name:  WORDPRESS_DB_HOST
        valueFrom: 
          secretKeyRef:
            name: mysqlsecret
            key: WORDPRESS_DB_HOST
---
apiVersion: v1
kind: Service
metadata:
  name: svc-wordpress
spec:
  selector:
    app: wordpress
    version: "1"
  ports:
    - port: 80
      targetPort: 80
  type: ClusterIP

---

apiVersion: v1
kind: Pod
metadata:
  name: mynginxpod
  labels:
    version: "1"
    app: mynginx
spec:
  containers:
    - name: nginx
      image: nginx:latest
      ports: 
       - containerPort: 80
      volumeMounts:
      - name: nginx-conf
        mountPath: /etc/nginx
        readOnly: true
      - name: log-volume
        mountPath: /var/log/nginx
    - name: fluent
      image: fluentd:latest
      ports: 
       - containerPort: 80
      volumeMounts:
      - name: fluentd-conf
        mountPath: /fluentd/etc
        readOnly: true
      - name: log-volume
        mountPath: /var/log
  volumes:
  - name: nginx-conf
    configMap:
      name: nginx-conf
      defaultMode: 0400
  - name: fluentd-conf
    configMap:
      name: fluentd-conf
      defaultMode: 0644
  - name: log-volume
    emptyDir: {}  

---
apiVersion: v1
kind: Service
metadata:
  name: svc-mynginx
spec:
  selector:
    app: mynginx
    version: "1"
  ports:
    - port: 80
      targetPort: 80
  type: LoadBalancer

---
